' Gambas class file

' Private preserve_times As String = " -t"        ' * preservar las fechas del archivo original
' Private preserve_perms As String = " -p"        ' * preservar permisos del archivo original
' Private preserve_group As String = " -g"        ' * preservar grupo comun del archivo original
' Private ejecutar_detal As String = " -v"        ' * ejecutar detallado, para revision de fallos
' Private ejecutar_limpi As String = " -q"        ' * ejecutar silencioso y sin muchas lineas
' Private ejecutar_compr As String = " -z"        ' * ejecutar envios comprimidos en la red
' Private progreso_mostr As String = " --progress" ' mostrar progreso de cada archivo si va por red
' Private progreso_parci As String = " --partial" ' dejar el archivo si no se completo
' Private deleteon_desti As String = " --delete"  ' borrar archivos en el destino (no recomendado)
Public limitebw As String = 20           ' opcion para limitar trafico
Public portserv As Integer = 14538        ' numero del puerto por defecto al que se conectar u/o correra el demonio

Private cmdrsync As String = "/usr/bin/rsync" ' commando a correr rsync
Private cmdrstar As String
Private cmdrstop As String
Private numberfs As Integer

Private filelock As String = "/tmp/simpleasisrsyncd.lock"
Private filedpid As String = "/tmp/simpleasisrsyncd.pid"
Private namefsec As String = ".simpleasisrsyncd.secrets" 
Private namefcfg As String = ".simpleasisrsyncd.conf" 
Private nameflog As String = ".simpleasisrsyncd.log" 
Private nameuser As String = "sysasis"
Private pathfile As String = User.Home & "/"

Private configurado As Boolean = False      ' semaforo de configuracion

Public Sub _new()
    Randomize
    numberfs = 1 'Int(Rnd(10000, 70000))
End


'' Esta función determina si existe permiso de lectura en la ruta dada 
Public Function FSLectura(ruta As String) As Boolean
    Return Access(ruta, gb.Read)
    Catch
        Debug ("ERROR-> [ " & DConv(Error.Text) & " ] ")
        Return False
End

'' Esta función determina si existe permiso de escritura en la ruta dada 
Public Function FSEscritura(ruta As String) As Boolean
    Return Access(ruta, gb.Write)
    Catch
        Debug ("ERROR-> [ " & DConv(Error.Text) & " ] ")
        Return False
End

'' configuracion automatica de servicios, la clave inicialmente esta en "" o vacia
Public Sub confDaemons() As Integer

    Dim f1 As File
    namefcfg = User.Home & "/" & namefcfg
    namefsec = User.Home & "/" & namefsec
    filelock = "/tmp/simpleasisrsyncd" & numberfs & ".lock"
    filedpid = "/tmp/simpleasisrsyncd" & numberfs & ".pid"

    ' configuracin del comando simplificada, which esta en todos los linux
    Shell "which rsync 2>&1" To cmdrsync ' si el comando existe tiene un retorno de carro
    cmdrsync = Replace$(cmdrsync, Chr$(10), "") ' removiendo fin de linea
    cmdrsync = Replace$(cmdrsync, Chr$(13), "") ' removiendo retorno de carro
    If Not Exist(cmdrsync) Then
        Return 1
    Endif

    ' configuracion del archivo de definicion del rsync (recepcion/revision)
    If FSEscritura(User.home) Then ' si se puede escribir en la ruta, escribe el archivo
        f1 = Open namefcfg For Write Create    'si no existe crea, si existe sobrescribe
        Print #f1, "lock file = " & filelock
        Print #f1, "pid file = " & filedpid
        Print #f1, "Max connections = 100"  ' hay maximo 86 tiendas en el 2011, hoy 34
        Print #f1, ""
        Print #f1, "[sysasismod]"
        Print #f1, "     path = " & User.Home & "/Www/"
        Print #f1, "     use chroot = false"
        Print #f1, "     comment = sysasis"
        Print #f1, "     uid = nobody"
        Print #f1, "     gid = nobody"
        Print #f1, "     read only = yes"
        Print #f1, "     list = yes"
        'Print #f1, "     auth users = " & nameuser_rsync
        'Print #f1, "     secrets file = " & pathfile_files & namefile_secre
        Close #f1
    End If

    If Not Exist(namefcfg) Then
        Return 2
    Endif

    ' creacion de archivo de usuarios y sus claves
    If FSEscritura(User.home) Then      ' verificar si hay se puede escribir en la ruta
        f1 = Open namefsec For Write Create     'abrir, si no existe se crea, si existe se sobrescribe
        Print #f1, nameuser & ":" & nameuser & ".1"
        Close #f1
    End If

    If Not Exist(namefsec) Then
        Return 2
    Endif
    Shell "chmod 600 " & namefsec

    cmdrstar = "/sbin/start-stop-daemon --start --quiet --oknodo  --pidfile " & filedpid & " --exec " & cmdrsync & " --  --daemon --port=" & portserv & " --log-file=" & nameflog & " --config=" & namefcfg & " --bwlimit=" & limitebw
    cmdrstop = "/sbin/start-stop-daemon --stop  --quiet --oknodo  --pidfile " & filedpid & " --exec " & cmdrsync & " --retry 3 --  --daemon --port=" & portserv & " --log-file=" & nameflog & " --config=" & namefcfg & " --bwlimit=" & limitebw

    If Exist(filedpid) Then
        Shell "cat " & filedpid & " 2>&1" To cmdrsync
        Shell cmdrstop 
        ' Wait 2                      ' el script tarda un poco y hay que esperar termine el demonio
        ' Exec ["kill", "-9", wline] For Read
        If Exist(filedpid) Then
            Print "matando demonio extra (en lo posible).. intentando matar " & cmdrsync
'             Shell "rm -f " & filedpid
        Endif
    Else
        Shell cmdrstar
    Endif

    configurado = True

Catch
    Debug ("ERROR-> [ " & DConv(Error.Text) & " ] ")
    Return 255
    
End


